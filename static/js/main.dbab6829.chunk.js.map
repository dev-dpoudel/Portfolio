{"version":3,"sources":["contents/Navigation.tsx","contents/Home.tsx","contents/Contact.tsx","contents/Projects.tsx","contents/Contents.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navigate","props","useState","activeMenu","setActiveMenu","history","useHistory","handleItemClick","e","push","target","text","Menu","icon","vertical","Item","name","active","onClick","Checkbox","slider","checked","theme","toggleTheme","label","ContactDetails","List","className","content","href","githubLink","HomePage","Card","Group","fluid","itemsPerRow","raised","Image","src","profile","avatar_url","wrapped","ui","size","alt","Content","Header","Meta","Description","extra","html_url","Contact","Icon","itemPerPage","key","value","Projects","maxRecords","setMaxRecords","page","setPage","defaultMaxRec","start","end","projectCards","projects","projectInfoCards","map","item","description","language","homepage","id","projectInfoCard","slice","children","Pagination","defaultActivePage","disabled","length","totalPages","onPageChange","activePage","setPageNo","Dropdown","options","defaultValue","onChange","d","Contents","setProjects","useEffect","fetch","then","data","json","catch","err","console","log","Grid","Column","inverted","width","columns","Segment","exact","path","Home","owner","App","setTheme","mode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbab6829.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from 'react'\nimport { Menu, Checkbox } from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom'\n\ninterface NavaigationProps {\n  theme: boolean\n  toggleTheme: (mode: boolean) => any\n}\n\nconst Navigate: FunctionComponent<NavaigationProps> = (props) => {\n  const [activeMenu, setActiveMenu] = useState(\"home\");\n  const history = useHistory();\n\n  const handleItemClick = (e: any) => {\n    history.push(e.target.text);\n    setActiveMenu(e.target.text);\n  }\n\n  return (\n    <div>\n      <Menu icon vertical >\n        <Menu.Item\n          name='home'\n          active={activeMenu === 'home'}\n          onClick={handleItemClick}\n          icon=\"home\"\n        />\n        <Menu.Item\n          name='projects'\n          active={activeMenu === 'projects'}\n          onClick={handleItemClick}\n          icon=\"file archive\"\n        />\n        <Menu.Item\n          name='contact'\n          active={activeMenu === 'contact'}\n          onClick={handleItemClick}\n          icon=\"envelope\"\n        />\n        <Menu.Item>\n          <Checkbox slider\n            checked={props.theme}\n            onClick={() => props.toggleTheme(!props.theme)}\n            label={\"Dark\"} />\n        </Menu.Item>\n      </Menu>\n    </div>\n  );\n}\n\nexport default Navigate;\n","import React, { FunctionComponent } from 'react';\r\nimport { Card, List, Image } from 'semantic-ui-react'\r\n\r\ninterface HomePageProps {\r\n  className: string\r\n  profile: any\r\n}\r\n\r\ninterface ContactUrlProps {\r\n  githubLink: string\r\n  className : string\r\n}\r\n\r\nconst ContactDetails: FunctionComponent<ContactUrlProps> = (props): React.ReactElement => {\r\n  return (\r\n    <div>\r\n      <List>\r\n        <List.Item\r\n          icon='github'\r\n          className={props.className}\r\n          content={<a href={props.githubLink}>Git</a>}\r\n        />\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst HomePage: FunctionComponent<HomePageProps> = (props): React.ReactElement => {\r\n\r\n  return (\r\n    <Card.Group fluid=\"true\" itemsPerRow={1}>\r\n      <Card raised className={props.className} >\r\n        <Image src={props.profile.avatar_url} wrapped ui={false} size=\"medium\" alt=\"Profile Image\" />\r\n        <Card.Content className={props.className}>\r\n          <Card.Header>Dinesh Poudel</Card.Header>\r\n          <Card.Meta>Software Engineer</Card.Meta>\r\n          <Card.Description>\r\n            Avid Learner | Gamer | Software Programmer | Writer\r\n        </Card.Description>\r\n        </Card.Content >\r\n        <Card.Content extra className={props.className}>\r\n          <ContactDetails className={props.className} githubLink={props.profile.html_url || \"\"} />\r\n        </Card.Content>\r\n      </Card>\r\n\r\n    </Card.Group>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { FunctionComponent } from \"react\";\nimport { Card, List, Icon } from 'semantic-ui-react';\n\ninterface ContactProps {\n  className : string\n}\n\nconst Contact: FunctionComponent<ContactProps> = (props): React.ReactElement => {\n  \n  return (\n    <Card.Group className={props.className} fluid=\"true\" itemsPerRow={1}>\n      <Card >\n        <Card.Content>\n          <Card.Header>Reach Me @</Card.Header>\n          <Card.Meta>\n            <span>\n              <Icon name=\"mail\" />\n              <a href='mailto:ryon_a@hotmail.com'>ryon_a@hotmail.com</a>\n            </span>\n          </Card.Meta>\n          <Card.Description>\n            <List>\n              <List.Item> Dhapasi, Tokha-6 Kathmandu, Nepal </List.Item>\n            </List>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <span>\n            <Icon name=\"linkedin\" />\n            <a href='https://www.linkedin.com/in/ryon03/'>LinkedIn</a>\n          </span>\n        </Card.Content>\n      </Card>\n\n    </Card.Group>\n  );\n}\n\nexport default Contact;\n","import React, { FunctionComponent, useState } from 'react';\r\nimport { Card, List, Icon, Pagination, Dropdown, SemanticWIDTHS} from 'semantic-ui-react';\r\n\r\ninterface projectDescription {\r\n  className: string\r\n  projects: []\r\n}\r\n\r\nconst itemPerPage = [\r\n  { key: '1', value: 1, text: 1 },\r\n  { key: '2', value: 2, text: 2 },\r\n  { key: '3', value: 3, text: 3 }\r\n]\r\n\r\nconst projectInfoCard = (projects: any, className: string) => {\r\n\r\n  let projectInfoCards: any[] = [];\r\n\r\n  projects.map((item: any) => {\r\n\r\n    projectInfoCards.push(\r\n      <Card className={className} key={item.id}>\r\n        <Card.Content className={className}>\r\n          <Card.Header>{item.name}</Card.Header>\r\n          <Card.Meta>\r\n            <span>\r\n              <Icon name=\"eye\" />\r\n              <a href={item.html_url}>View Source</a>\r\n            </span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n            <List>\r\n              <List.Item> {item.description} </List.Item>\r\n              <List.Item> <span className=\"languages dark\"> {item.language} </span> </List.Item>\r\n            </List>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra className={className}>\r\n          <span>\r\n            <Icon name=\"github\" />\r\n            <a href={item.homepage}>GitHub</a>\r\n          </span>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n\r\n    return true;\r\n  })\r\n\r\n  return projectInfoCards;\r\n}\r\n\r\nconst Projects: FunctionComponent<projectDescription> = (props): React.ReactElement => {\r\n  const [maxRecords, setMaxRecords] = useState<SemanticWIDTHS>(1)\r\n  const [page, setPage] = useState(1)\r\n  const setMaxRec = (value: any) => setMaxRecords(value)\r\n  const setPageNo = (e: any, activePage: number | string | undefined) => {\r\n    (typeof activePage === \"string\") ? setPage(1) : setPage(activePage || 1);\r\n  }\r\n\r\n  const defaultMaxRec = (typeof maxRecords == \"number\") ? maxRecords : 1;\r\n  const start = (page - 1) * defaultMaxRec;\r\n  const end = start + defaultMaxRec;\r\n\r\n  const projectCards = projectInfoCard(props.projects.slice(start, end), props.className);\r\n\r\n  return (\r\n    <div>\r\n      <Card.Group className={props.className} fluid=\"true\" itemsPerRow={maxRecords} children={projectCards} />\r\n      <div className=\"centerfloat pagebottom\">\r\n        <Pagination className={props.className}\r\n          defaultActivePage={1}\r\n          disabled={props.projects.length <= defaultMaxRec}\r\n          totalPages={props.projects.length / defaultMaxRec || 1}\r\n          onPageChange={(e, { activePage }) => setPageNo(e, activePage)} /> \r\n        <Dropdown className={\"floatleft \" + props.className}\r\n          options={itemPerPage}\r\n          defaultValue={itemPerPage[0].value}\r\n          onChange={(e, d) => setMaxRec(d.value)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Grid, Segment } from 'semantic-ui-react'\r\nimport HomePage from './Home';\r\nimport Contact from './Contact'\r\nimport Projects from './Projects';\r\n\r\ninterface ContentProps {\r\n  className: string\r\n}\r\n\r\nconst Contents: FunctionComponent<ContentProps> =\r\n  (props: ContentProps): React.ReactElement => {\r\n\r\n    const [projects, setProjects]: any[] = useState([]);\r\n    useEffect(() => {\r\n      fetch(\"https://api.github.com/users/dev-dpoudel/repos\")\r\n        .then(data => {\r\n          return data.json();\r\n        })\r\n        .then(data => {\r\n          setProjects(data);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Error fetching Repositories\");\r\n        });\r\n    }, []);\r\n\r\n    const profile = projects[0] || { \"owner\": {} }\r\n\r\n    return (\r\n      <Grid.Column inverted=\"true\" width={10}>\r\n        <Grid columns={14} >\r\n          <Segment className={\"contents \" + props.className}>\r\n            < Switch >\r\n              <Route exact path=\"/\">\r\n                <HomePage className={props.className} profile={profile.owner} />\r\n              </Route>\r\n              <Route exact path=\"/Home\">\r\n                <HomePage className={props.className} profile={profile.owner} />\r\n              </Route>\r\n              <Route path=\"/Projects\">\r\n                <Projects className={props.className} projects={projects} />\r\n              </Route>\r\n              <Route path=\"/Contact\">\r\n                <Contact className={props.className} />\r\n              </Route>\r\n            </Switch>\r\n          </Segment>\r\n        </Grid>\r\n      </Grid.Column>\r\n    );\r\n  }\r\n\r\nexport default Contents;\r\n","import React, { FunctionComponent, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navigate from './contents/Navigation';\nimport Contents from './contents/Contents';\nimport { Grid } from 'semantic-ui-react'\n\nconst App: FunctionComponent<{}> = () => {\n  const [theme, setTheme] = useState(\"dark\")\n\n  const toggleTheme = (mode: boolean) => {\n    setTheme(mode === true ? \"dark\" : \"light\")\n  }\n\n  return (\n    <Router>\n      <div className=\"adjustcenter\">\n        <Grid columns={2}>\n          <Navigate theme={theme === \"dark\"} toggleTheme={toggleTheme} />\n          <Contents className={theme} />\n        </Grid>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-less/semantic.less'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}